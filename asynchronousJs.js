/**
 *  동기(Synchronous) : 요청과 그 결과가 동시에 일어남
 *          어떤 객체 또는 함수 내부에서 다른 함수를 호출했을 때 이 함수의 결과를 호출한 쪽에서 처리
 *  비동기(Asynchronous) : 요청과 그 결과가 동시에 일어나지 않음
 *          이 함수의 결과를 호출한 쪽에서 처리하지 않음
 *
 *
 *  대부분의 함수는 동기식
 *  비동기 대표적인 예 js 의 setTimeout(); , ajax 통신의 response
 *
 *  콜백함수 : 비동기 방식에서 어떤 수행이 완료되었을 때 (event가 발생했을 때) 수행해야할 함수
 *  >> 비동기 방식에서는 함수를 호출한 쪽에서 수행결과를 직접 처리하지 않고 콜백함수를 통해 수행 결과를 처리
 *  >> 서버에서 데이터를 받아오는 과정에서 모든 과정을 비동기로 처리하다 보면 콜백 안에 콜백을 계속 물게 되는데 이를 콜백지옥이라고 한다.
 *
 *
 * ** 블로킹(blocking)과 논블로킹(non-bloking)
 * 블로킹 : 자신의 수행결과가 끝날 때까지 제어권을 갖고 있는 것
 * 논블로킹 : 자신이 호출되었을 때 제어권을 바로 자신을 호출한 쪽으로 넘기며, 자신을 호출한 쪽에서 다른 일을 할 수 있도록 하는 것
 *
 *
 * **/